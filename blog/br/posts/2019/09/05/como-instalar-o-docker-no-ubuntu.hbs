{{#> blog/page
  lang="pt"
  title="Como instalar o Docker no Ubuntu"
  description="As imagens de containers do Docker nos permitem otimizar o processo de criação, desenvolvimento e execucação de aplicações. Vamos começar instalando o Docker para obtermos esses benefícios e saber mais sobre como ele funciona."
  image="posts/2019/09/05/cover.png"
  path="br/posts/2019/09/05/como-instalar-o-docker-no-ubuntu.html"
  original="posts/2019/09/05/how-to-install-docker-on-ubuntu.html"
  disqus="2019/09/05/how-to-install-docker-on-ubuntu"
}}

{{#*inline "body-block"}}
<small>
  05 de setembro de 2019
</small>

<h1>
  Como instalar o Docker no Ubuntu
</h1>

<figure>
  <img src="/posts/2019/09/05/cover.svg" alt="Docker">
</figure>

<p>
  As imagens de containers do Docker nos permitem otimizar o processo de criação, desenvolvimento e execucação de
  aplicações. Vamos começar instalando o Docker para obtermos esses benefícios e saber mais sobre como ele funciona.
</p>

<p>
  <a href="https://www.docker.com/">Docker</a> é uma plataforma de <a href="https://github.com/docker">código aberto</a>
  e <a href="https://docs.docker.com/get-started/">bem documentada</a> que nos permite executar imagens dentro de
  containers isolados. Essas imagens podem ser aplicações inteiras que podem ser compartilhadas como packages através do
  <a href="https://hub.docker.com/">Docker Hub</a> e publicadas em diversos ambientes usando configurações específicas.
</p>

<p>
  O Docker trabalha com base no <a href="https://linuxcontainers.org">Linux Containers</a> (LXC)
  que possibilita executar múltiplos sistemas Linux de forma isolada (containers) usando um único host e um único
  kernel, diferentemente de uma máquina virtual (VM - <i>Virtual Machine</i>).
</p>

<p>
  Cada container atua como uma VM porém, sem o overhead decorrente da simulação de hardware (realizada pelo
  virtualizador ou emulador). Por padrão, os containers usam os recursos do host (CPU, RAM, etc) sem restrição.
  Contudo, o Docker nos permite limitar os containers configurando
  <a href="https://docs.docker.com/config/containers/resource_constraints/"><i>resource constraints</i></a>
  (restrições de recursos).
</p>

<p>
  Para obtermos esses benefícios, vamos começar instalando o Docker seguindo esses dois passos que você também pode
  encontrar na <a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/">documentação do Docker</a>:

  <ol>
    <li>Desinstalar versões anteriores do Docker</li>
    <li>Instalar o Docker</li>
  </ol>
</p>

<h2 id="desinstalar-o-docker">
  Desinstalar versões anteriores do Docker
  <a href="#desinstalar-o-docker"></a>
</h2>

<p>
  É <a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/#uninstall-old-versions">recomendado</a>
  desinstalar versões anteriores do Docker antes de prosseguir com a instalação:
</p>

<p>
  <pre><code>sudo apt-get remove docker docker-engine docker.io containerd runc</code></pre>
</p>

<h2 id="instalar-o-docker">
  Instalar o Docker
  <a href="#instalar-o-docker"></a>
</h2>

<p>
  Para instalar o Docker CE (Community Edition) pela primeira vez no Ubuntu
  precisamos registrar o repositório do Docker.
</p>

<p>
  Mas primeiro, vamos atualizar os índices do <code>apt</code>:
</p>

<p>
  <pre><code>sudo apt-get update</code></pre>
</p>

<p>
  Em seguida, vamos instalar os pacotes necessários para que o <code>atp</code> possa usar repositórios via HTTPS:
</p>

<p>
  <pre><code>sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common</code></pre>
</p>

<p>
  Agora, vamos adicionar a chave GPG oficial do Docker:
</p>

<p>
  <pre><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</code></pre>
</p>

<p>
  E adicionar o repositório de versões estáveis do Docker:
</p>

<p>
  <pre><code>sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"</code></pre>
</p>

<p>
  Atualize os índices do <code>apt</code> mais uma vez:
</p>

<p>
  <pre><code>sudo apt-get update</code></pre>
</p>

<p>
  Por último, instale o Docker executando o seguine comando:
</p>

<p>
  <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io</code></pre>
</p>

<p>
  Você pode ter notado que no último comando instalamos três packages, vamos entender brevemente cada um:

  <ul>
    <li>
      <b>docker-ce</b>:
      <a href="https://docs.docker.com/engine/">Docker Engine</a> com as funcionalidades disponíveis para a
      Community Edition (gratuita). Há também a
      <a href="https://www.docker.com/products/docker-enterprise">Enterprise Edition</a> (paga).
    </li>
    <li>
      <b>docker-ce-cli</b>:
      Esse Docker Client oferece uma <a href="https://docs.docker.com/engine/reference/commandline/cli/">CLI</a>
      (<i>Command-Line Interface</i>) para interagirmos com o Docker Engine Community Edition.
    </li>
    <li>
      <b>containerd.io</b>:
      O Container Daemon oferece um ambiente de execução que abstrai as especificidades dos kernels para o Docker Engine.
      Para mais detalhes você pode ler esse <a href="https://blog.docker.com/2017/08/what-is-containerd-runtime/">post</a>
      no blog do Docker.
    </li>
  </ul>
</p>

<p>
  Para confirmar que o Docker foi instalado com sucesso:
</p>

<p>
  <pre><code>sudo docker run hello-world</code></pre>
</p>

<p>
  Esse comando faz o download de uma imagem de teste e a executa em um container que imprime uma mensagem e encerra.
  Você deve visualizar uma mensagem que inicia com o texto "Hello from Docker!".
</p>

<p>
  Após instalado e executando corretamente podemos gerenciar as imagens do Docker.
  Mas isso discutiremos em um próximo post.
</p>

{{/inline}}

{{/blog/page}}
