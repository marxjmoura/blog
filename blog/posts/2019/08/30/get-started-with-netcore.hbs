{{#> blog/page
  lang="en"
  title="Get started with .NET Core"
  description="Let's set up our development environment and build a RESTful API using ASP.NET Core MVC with Entity Framework Core and xUnit to write automated tests."
  image="posts/2019/08/30/cover.png"
  path="posts/2019/08/30/get-started-with-netcore.html"
  translation="br/posts/2019/08/30/iniciando-com-netcore.html"
  disqus="2019/08/30/get-started-with-netcore"
}}

{{#*inline "body-block"}}
<small>
  30 August 2019
</small>

<h1>
  Get started with .NET Core
</h1>

<figure>
  <img src="/posts/2019/08/30/cover.svg" alt=".NET Core play">
</figure>

<p>
  Let's set up our development environment and build a RESTful API using
  <a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/overview">ASP.NET Core MVC</a> with
  <a href="https://docs.microsoft.com/en-us/ef/core/">Entity Framework Core</a> and
  <a href="https://docs.microsoft.com/en-us/dotnet/core/testing/unit-testing-with-dotnet-test">xUnit</a>
  to write automated tests.
</p>

<p>
  To set up the development environment we will follow a few steps.
  I'm using the Ubuntu system but you can follow the same sequence in Windows.

  <ol>
    <li>
      <a href="#install-netcore-sdk">Install .NET Core SDK</a>
    </li>
    <li>
      <a href="#install-vscode">Install VS Code</a>
    </li>
    <li>
      <a href="#install-postgresql">Install PostgreSQL</a>
    </li>
    <li>
      <a href="#create-a-project">Create a project</a>
    </li>
  </ol>
</p>

<h2 id="install-netcore-sdk">
  1. Install .NET Core SDK
  <a href="#install-netcore-sdk"></a>
</h2>

<p>
  To install the .NET Core SDK on Ubuntu you can refer to the
  <a href="/posts/2019/08/29/install-netcore-sdk-on-ubuntu.html">post</a>
  I wrote to do this with a few command lines.
  But I also suggest you to read the Microsoft instructions for Linux on the
  <a href="https://dotnet.microsoft.com/download">download page</a>.
</p>

<p>
  If you are using windows you can download the installer and follow the instructions during installation.
</p>

<h2 id="install-vscode">
  2. Install VS Code
  <a href="#install-vscode"></a>
</h2>

<p>
  <a href="https://code.visualstudio.com">VS Code</a> is a lightweight code editor
  free and <a href="https://github.com/microsoft/vscode">open source</a>. A great tool!
  But there is other options like <a href="https://visualstudio.microsoft.com">Visual Studio</a>
  and <a href="https://www.monodevelop.com">MonoDevelop</a>.
</p>

<p>
  If you want to use VS Code (like me) just <a href="https://code.visualstudio.com/download">download</a> and
  install it. Then, open the VS Code, click on <code>Extensions</code> tab and install these two extensions:
  <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp">C#</a> and
  <a href="https://marketplace.visualstudio.com/items?itemName=jchannon.csharpextensions">C# Extensions</a>
  (use the search bar to find them).
</p>

<h2 id="install-postgresql">
  3. Install PostgreSQL
  <a href="#install-postgresql"></a>
</h2>

<p>
  To persist the application data we will use a relational database. In this guide we will use the
  <a href="https://www.postgresql.org/">PostgreSQL</a> database.
  There are other databases like
  <a href="https://www.microsoft.com/en-us/sql-server/sql-server-downloads/">SQL Server</a>,
  <a href="https://www.oracle.com/database/">Oracle</a>, <a href="https://www.mysql.com/">My SQL</a> and
  <a href="https://mariadb.org/">MariaDB</a>.
  Also, there are non relational databases like <a href="https://www.mongodb.com/">MongoDB</a>,
  <a href="https://aws.amazon.com/dynamodb/">Amazon DynamoDB</a> and
  <a href="https://firebase.google.com/products/firestore/">Google Cloud Firestore</a> that you can explore.
</p>

<p>
  I will write about how we can install, manage and optimize PostgreSQL to the hardware configuration and
  as soon as I do, I will update this post. For now I will just recommend this great article by Digital Ocean:
  <a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-18-04">
    How to install and use PostgreSQL on Ubuntu 18.04</a>.
</p>

<h2 id="create-a-project">
  4. Create a project
  <a href="#create-a-project"></a>
</h2>

<p>
  To create and manage the project we will use the
  <a href="https://docs.microsoft.com/en-us/dotnet/core/tools/">.NET Core CLI</a> tools.
  The following content will be discussed as we develop our RESTful API:

  <ul>
    <li>
      <b>MVC (Model-View-Controller)</b>:
      This pattern will help us separate responsibilities into logical layers. The
      <a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/overview">ASP.NET Core MVC</a>
      is a framework based on this pattern.
    </li>
    <li>
      <b>DI and IoC</b>:
      Dependency injection (DI) and inversion of control (IoC) are patterns we will use to reduce coupling and make our
      code more testable. The <a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/overview">ASP.NET Core MVC</a>
      framework already has a built-in IoC container and we will see how it works.
    </li>
    <li>
      <b>ORM (Object-relational mapping)</b>:
      We will use the ORM framework <a href="https://docs.microsoft.com/en-us/ef/core/">Entity Framework Core</a>
      to reduce coupling with database technologies and speed-up development by eliminating the need to write
      repetitive SQL code for CRUD operations.
    </li>
    <li>
      <b>Automated tests</b>:
      Instead of conduct tests manually, we will write automated tests with
      <a href="https://docs.microsoft.com/en-us/dotnet/core/testing/unit-testing-with-dotnet-test">xUnit</a>.
      Thus, we can test new and old features (regression tests) efficiently.
    </li>
    <li>
      <b>Code writing</b>:
      We will devote some attention to making our code readable and navigable with organized file structure,
      correct semantics and proper indentation.
    </li>
  </ul>
</p>

<p>
  In the next post we will start coding and see all these concepts applied in practice.
</p>

{{/inline}}

{{/blog/page}}
